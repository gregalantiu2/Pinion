{
  "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Pinion.csproj",
  "Configuration": {
    "ConfigurationName": "MVC-3.0",
    "LanguageVersion": "5.0",
    "Extensions": [
      {
        "ExtensionName": "MVC-3.0"
      }
    ]
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "HashCode": -1742744458,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Home.HomeContent",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HomeContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Home.HomeContent"
        }
      },
      {
        "HashCode": -1543097827,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Home.HomeContent",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Pages.Home.HomeContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Home.HomeContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1500265544,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Examples.Counter",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Counter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Examples.Counter"
        }
      },
      {
        "HashCode": 141226530,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Examples.Counter",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Pages.Examples.Counter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Examples.Counter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1061624362,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Examples.FetchData",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FetchData"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Examples.FetchData"
        }
      },
      {
        "HashCode": 561813182,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Examples.FetchData",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Pages.Examples.FetchData"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Examples.FetchData",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1275181439,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Examples.Index",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Index"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Examples.Index"
        }
      },
      {
        "HashCode": -869981355,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Examples.Index",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Pages.Examples.Index"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Examples.Index",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1705438644,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Examples.SurveyPrompt",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SurveyPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Examples.SurveyPrompt"
        }
      },
      {
        "HashCode": 1123156782,
        "Kind": "Components.Component",
        "Name": "Pinion.Pages.Examples.SurveyPrompt",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Pages.Examples.SurveyPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Pages.Examples.SurveyPrompt",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1224198172,
        "Kind": "Components.Component",
        "Name": "Pinion.App",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.App"
        }
      },
      {
        "HashCode": -1915584269,
        "Kind": "Components.Component",
        "Name": "Pinion.App",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.App",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 193602466,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.LoginDisplay",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoginDisplay"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.LoginDisplay"
        }
      },
      {
        "HashCode": -1529973318,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.LoginDisplay",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Shared.LoginDisplay"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.LoginDisplay",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 744105088,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.PinionBox",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PinionBox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.PinionBox"
        }
      },
      {
        "HashCode": 1690650792,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.PinionBox",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Shared.PinionBox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.PinionBox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1429123854,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.NavMenu",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.NavMenu"
        }
      },
      {
        "HashCode": 500759072,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.NavMenu",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Shared.NavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.NavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2005853225,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.MainLayout",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.MainLayout"
        }
      },
      {
        "HashCode": 523125000,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.MainLayout",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Shared.MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.MainLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 991152934,
        "Kind": "Components.ChildContent",
        "Name": "Pinion.Shared.MainLayout.Body",
        "AssemblyName": "Pinion",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Pinion.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1353874627,
        "Kind": "Components.ChildContent",
        "Name": "Pinion.Shared.MainLayout.Body",
        "AssemblyName": "Pinion",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "Pinion.Shared.MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Pinion.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1635989441,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.PageHeader",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PageHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.PageHeader"
        }
      },
      {
        "HashCode": 52548734,
        "Kind": "Components.Component",
        "Name": "Pinion.Shared.PageHeader",
        "AssemblyName": "Pinion",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Pinion.Shared.PageHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Pinion.Shared.PageHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1965208610,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatComponentHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatComponentHost"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatComponentHost"
        }
      },
      {
        "HashCode": -139013426,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatComponentHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatComponentHost"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatComponentHost",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1051465938,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAccordion",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAccordion"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides toggle icon for all expansion panel summaries in the accordion\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering for all expansion panel details in the accordion.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAccordion"
        }
      },
      {
        "HashCode": -941902050,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAccordion",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAccordion"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides toggle icon for all expansion panel summaries in the accordion\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering for all expansion panel details in the accordion.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAccordion",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 336263282,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAccordion.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAccordion"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAccordion.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1498567441,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAccordion.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAccordion"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAccordion.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -688519836,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatExpansionPanel provides an expandable details-summary view.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides the toggle icon in the expansion panel summary\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering of the expansion panel details.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanel"
        }
      },
      {
        "HashCode": -1634881515,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatExpansionPanel provides an expandable details-summary view.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Hides the toggle icon in the expansion panel summary\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LazyRendering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables lazy rendering of the expansion panel details.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LazyRendering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1747130930,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 526743688,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 948533826,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelDetails",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelDetails"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails"
        }
      },
      {
        "HashCode": -2046213420,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelDetails",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelDetails"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1678318084,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelDetails.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelDetails"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2112814194,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelDetails.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelDetails"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelDetails.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -808812286,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader"
        }
      },
      {
        "HashCode": 1241434099,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 662779556,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1659455035,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1699702078,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader"
        }
      },
      {
        "HashCode": 1049651376,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1246174984,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -314304095,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 22828093,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSummary",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanelSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary"
        }
      },
      {
        "HashCode": 901859544,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatExpansionPanelSummary",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanelSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2125873753,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSummary.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatExpansionPanelSummary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -539745736,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatExpansionPanelSummary.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatExpansionPanelSummary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatExpansionPanelSummary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -585637646,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAnchorContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorContainer"
        }
      },
      {
        "HashCode": 1047538810,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAnchorContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1646116647,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAnchorContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -386192708,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAnchorContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 302811673,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAnchorLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorLink"
        }
      },
      {
        "HashCode": -1301090614,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAnchorLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -577007192,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAnchorLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 761188617,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAnchorLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -94298473,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorUtils",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAnchorUtils"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorUtils"
        }
      },
      {
        "HashCode": 437374144,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAnchorUtils",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAnchorUtils"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAnchorUtils",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 226651316,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorUtils.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAnchorUtils"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorUtils.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -961284335,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAnchorUtils.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAnchorUtils"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAnchorUtils.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -911243900,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Acts as a container for items such as application title, navigation icon, and action items.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Short",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Short"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fixed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Fixed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBar"
        }
      },
      {
        "HashCode": 1611104513,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Acts as a container for items such as application title, navigation icon, and action items.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Short",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Short"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fixed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Fixed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1493937123,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 521803243,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -830028967,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAction",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarAction"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAction"
        }
      },
      {
        "HashCode": 1503432829,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAction",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarAction"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAction",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 771317043,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarAction.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarAction"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarAction.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -488992819,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarAction.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarAction"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarAction.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2011715819,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAdjust",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarAdjust"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAdjust"
        }
      },
      {
        "HashCode": -745518108,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarAdjust",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarAdjust"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarAdjust",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1877458290,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContainer"
        }
      },
      {
        "HashCode": -176855050,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -909056801,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2074707818,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 329753978,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContent"
        }
      },
      {
        "HashCode": 1655039749,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 684360939,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -636562731,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 563554407,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarNavigationIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarNavigationIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarNavigationIcon"
        }
      },
      {
        "HashCode": -1849953726,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarNavigationIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarNavigationIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarNavigationIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1904946342,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarRow"
        }
      },
      {
        "HashCode": -1758458195,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 305340611,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1812411581,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1060051271,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarSection",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarSection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Align",
            "TypeName": "MatBlazor.MatAppBarSectionAlign",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Align"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarSection"
        }
      },
      {
        "HashCode": 26589643,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarSection",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarSection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Align",
            "TypeName": "MatBlazor.MatAppBarSectionAlign",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Align"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarSection",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1821053377,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarSection.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarSection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarSection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2020014972,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarSection.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarSection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarSection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2067294190,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAppBarTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarTitle"
        }
      },
      {
        "HashCode": -1982832939,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAppBarTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAppBarTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAppBarTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 567881064,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAppBarTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -393626213,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAppBarTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAppBarTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAppBarTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1849350156,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The autocomplete is a normal text input enhanced by a panel of suggested options.\n            </summary>\n            <typeparam name=\"TItem\">Type of element type.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1309799989,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The autocomplete is a normal text input enhanced by a panel of suggested options.\n            </summary>\n            <typeparam name=\"TItem\">Type of element type.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1198141742,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -17906667,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 155484122,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 549204093,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -60808622,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1938573642,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -304348804,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1166211972,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1255835917,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink"
        }
      },
      {
        "HashCode": 108035555,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1370295195,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -28567534,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -66006752,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take.\n            They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n            Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an button's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Text label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButton"
        }
      },
      {
        "HashCode": 2029664531,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take.\n            They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n            Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an button's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Text label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 391075519,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2083414905,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -957889540,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCard",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Card component for Blazor contain content and actions about a single subject. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCard"
        }
      },
      {
        "HashCode": -1009137026,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCard",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Card component for Blazor contain content and actions about a single subject. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCard",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1626843971,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCard.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCard"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCard.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 789443056,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCard.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCard"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCard.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -122623090,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionButtons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardActionButtons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionButtons"
        }
      },
      {
        "HashCode": 371125029,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionButtons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardActionButtons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionButtons",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -247319431,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionButtons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardActionButtons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionButtons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1938225574,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionButtons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardActionButtons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionButtons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -335367989,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionIcons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardActionIcons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionIcons"
        }
      },
      {
        "HashCode": -435785870,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActionIcons",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardActionIcons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActionIcons",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1744262881,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionIcons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardActionIcons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionIcons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1100418834,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActionIcons.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardActionIcons"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActionIcons.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1352374679,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActions"
        }
      },
      {
        "HashCode": 1538975147,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardActions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2083306203,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -298362402,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -934046990,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unbounded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Unbounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardContent"
        }
      },
      {
        "HashCode": -50383454,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unbounded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Unbounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 224371570,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1368646535,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1441183952,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardMedia",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCardMedia"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Square",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Square"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wide",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wide"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContentClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardMedia"
        }
      },
      {
        "HashCode": 714154121,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCardMedia",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCardMedia"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Square",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Square"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wide",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wide"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContentClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCardMedia",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -668270509,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardMedia.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCardMedia"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardMedia.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2041137692,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCardMedia.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCardMedia"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCardMedia.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1122154760,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Checkboxes for Blazor, allow the user to select multiple options from a set. \n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1763628914,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Checkboxes for Blazor, allow the user to select multiple options from a set. \n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1743053274,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1134081836,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 140601185,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckbox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -561577528,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckbox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1093700871,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckbox<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCheckbox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -117439746,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckbox<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCheckbox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -630302215,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChipSet"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Choice",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Allows single selection from a set of options. If combined with Filter the selected value can be unselected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Choice"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n             Enables multiple-choice selection from the set of chips. Chips must be \"Checkable\" for this to work.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChip",
            "TypeName": "MatBlazor.MatChip",
            "Metadata": {
              "Common.PropertyName": "SelectedChip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChips",
            "TypeName": "MatBlazor.MatChip[]",
            "Metadata": {
              "Common.PropertyName": "SelectedChips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChipSet"
        }
      },
      {
        "HashCode": -884924885,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChipSet"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Choice",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Allows single selection from a set of options. If combined with Filter the selected value can be unselected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Choice"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n             Enables multiple-choice selection from the set of chips. Chips must be \"Checkable\" for this to work.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChip",
            "TypeName": "MatBlazor.MatChip",
            "Metadata": {
              "Common.PropertyName": "SelectedChip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChips",
            "TypeName": "MatBlazor.MatChip[]",
            "Metadata": {
              "Common.PropertyName": "SelectedChips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Metadata": {
              "Common.PropertyName": "SelectedChipsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChipSet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1406445998,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatChipSet.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatChipSet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatChipSet.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1434664367,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatChipSet.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatChipSet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatChipSet.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -880983129,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "LeadingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Optional icon, displayed before the label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A trailing icon comes with the functionality to remove the chip from the set, so the natural value for this would be \"clear\".\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "TrailingIconClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The chip's text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            A user-defined value assigned to the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Reflects the selection state of a choice- or filter-chip (parent chipset has either Choice or Filter set to true).\n            \n             When you set this in markup, it pre-selects the chip.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Allows two-way binding of IsSelected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsCheckable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Checkable chips show a check-mark when selected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsCheckable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChip"
        }
      },
      {
        "HashCode": 369203306,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "LeadingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Optional icon, displayed before the label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A trailing icon comes with the functionality to remove the chip from the set, so the natural value for this would be \"clear\".\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Metadata": {
              "Common.PropertyName": "TrailingIconClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The chip's text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            A user-defined value assigned to the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Reflects the selection state of a choice- or filter-chip (parent chipset has either Choice or Filter set to true).\n            \n             When you set this in markup, it pre-selects the chip.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Allows two-way binding of IsSelected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsCheckable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Checkable chips show a check-mark when selected\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsCheckable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatChip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -865564520,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 586428389,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1741351254,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 731600941,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "MatBlazor.BaseMatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1978895125,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "BaseMatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2064743078,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "MatBlazor.BaseMatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1616727970,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 246377446,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1955164651,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "BaseMatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1526487367,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "MatBlazor.BaseMatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1367967326,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTable",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTable"
        }
      },
      {
        "HashCode": -380050156,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTable",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTable",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 634692500,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTable.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTable.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1568577950,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTable.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTable.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 198062893,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumn",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumn"
        }
      },
      {
        "HashCode": 1652782348,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumn",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumn",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -346061757,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContent<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableContent<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -109614841,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContent<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableContent<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 704203408,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1316610021,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContent<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1021398755,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePicker<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 972862898,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePicker<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 130196118,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePicker<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDatePicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1808563168,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePicker<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDatePicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 553384418,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDialog"
        }
      },
      {
        "HashCode": 1529924373,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1508284149,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -554211279,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1928583960,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDivider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatDivider is a component that allows for Material styling of a line separator with various orientation options. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Inset",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Inset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Padded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDivider"
        }
      },
      {
        "HashCode": 1999248354,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDivider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatDivider is a component that allows for Material styling of a line separator with various orientation options. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Inset",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Inset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Padded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDivider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 632946230,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer"
        }
      },
      {
        "HashCode": 187134944,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2056914675,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1118059865,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2035486354,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent"
        }
      },
      {
        "HashCode": -2092797245,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -683659021,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -301007744,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -643762,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The navigation drawer slides in from the left and contains the navigation destinations for your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawer"
        }
      },
      {
        "HashCode": -695629942,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The navigation drawer slides in from the left and contains the navigation destinations for your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1446278478,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1156250175,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -774881994,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFAB",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            A floating action button represents the primary action in an application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFAB"
        }
      },
      {
        "HashCode": -1113008421,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFAB",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            A floating action button represents the primary action in an application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFAB",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1676920011,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 490327377,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 913263517,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFileUpload"
        }
      },
      {
        "HashCode": -1126004885,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatFileUpload",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 569470938,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHelperText"
        }
      },
      {
        "HashCode": 438322683,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHelperText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1581706821,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHidden",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Quickly and responsively toggle the visibility value of components and more with our hidden utilities.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHidden"
        }
      },
      {
        "HashCode": -729867030,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatHidden",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Quickly and responsively toggle the visibility value of components and more with our hidden utilities.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatHidden",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1092003526,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1202503619,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2079479034,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 706117029,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "MatBlazor.BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1327748957,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2043799404,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "MatBlazor.BaseMatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1889937485,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Icons are appropriate for buttons that allow a user to take actions or make a selection, such as adding or removing a star to an item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIconButton"
        }
      },
      {
        "HashCode": 261043616,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Icons are appropriate for buttons that allow a user to take actions or make a selection, such as adding or removing a star to an item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1308646186,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2056401357,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 274669058,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIcon",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Makes it easier to use vector-based icons in your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIcon"
        }
      },
      {
        "HashCode": 52005774,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatIcon",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Makes it easier to use vector-based icons in your app.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1782656398,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1255253835,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 672021461,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListGroup"
        }
      },
      {
        "HashCode": 1702621210,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 851100860,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -12574149,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1715877075,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatList",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatList"
        }
      },
      {
        "HashCode": -728848072,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatList",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1126957328,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1943910837,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2048065936,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListItem"
        }
      },
      {
        "HashCode": -1055237538,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatListItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Lists present multiple line items vertically as a single continuous element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatListItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1245827507,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -266647224,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1457111285,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Menus display a list of choices on a transient sheet of material.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatMenu"
        }
      },
      {
        "HashCode": 1138209756,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Menus display a list of choices on a transient sheet of material.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1425961394,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 314201124,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1680325009,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Nav Item is a menu item in the Nav Menu. Inherits from Mat List Item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavItem"
        }
      },
      {
        "HashCode": 1343294837,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Nav Item is a menu item in the Nav Menu. Inherits from Mat List Item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1044011307,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -193453321,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -804132260,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavMenu provides a navigation container\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu"
        }
      },
      {
        "HashCode": 1081463825,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavMenu provides a navigation container\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -639201674,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -805533643,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1871767170,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavSubMenu provides an expandable panel for child navigation lists.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu"
        }
      },
      {
        "HashCode": -191683517,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatNavSubMenu provides an expandable panel for child navigation lists.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -346889033,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1953545197,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1103447230,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design NumericUpDown for Blazor, text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 913458832,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design NumericUpDown for Blazor, text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1335889732,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -540039693,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -875191071,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -488520696,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -886448570,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNumericUpDownField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1216941559,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNumericUpDownField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1668507682,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaginator"
        }
      },
      {
        "HashCode": 1329550624,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaginator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -997316118,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaper",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Basic component where the physical properties of paper are translated to the screen.\n            Used for creating sections and giving more focus to some parts of the application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaper"
        }
      },
      {
        "HashCode": -637601495,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatPaper",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Basic component where the physical properties of paper are translated to the screen.\n            Used for creating sections and giving more focus to some parts of the application.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatPaper",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -683742564,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1757289449,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 755010301,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Progress indicators display the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressBar"
        }
      },
      {
        "HashCode": -2009917798,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Progress indicators display the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2101177488,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressCircle",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Circular Progress indicator displays the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressCircle"
        }
      },
      {
        "HashCode": 258575452,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatProgressCircle",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Circular Progress indicator displays the length of a process or express an unspecified wait time.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatProgressCircle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1632408561,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take. They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1549005541,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Buttons communicate an action a user can take. They are typically placed throughout your UI, in places like dialogs, forms, cards, and toolbars.\n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2142512868,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 543907584,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -207272109,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 426940992,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            \n            </summary>\n            <typeparam name=\"TValue\">any</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1698471214,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2137727275,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1553143726,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1400616317,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 976606297,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButton<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButton<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 979376348,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButton<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButton<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1438888115,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButton<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1735736605,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButton<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButton<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 769216128,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 2137881361,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -771823589,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1408919488,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1187791737,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -56541611,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 60550476,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRipple",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Ripples are visual representations used to communicate the status of a component or interactive element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRipple"
        }
      },
      {
        "HashCode": -1142865747,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatRipple",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Ripples are visual representations used to communicate the status of a component or interactive element. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatRipple",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1472029017,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1244139756,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -23762495,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseCoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1083760914,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseCoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -777725772,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseCoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1317433975,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseCoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseCoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1366267116,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Selects allow users to select from a single-option menu. It functions as a wrapper around the browser's native select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseCoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 509927123,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Selects allow users to select from a single-option menu. It functions as a wrapper around the browser's native select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseCoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.BaseCoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -713366578,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1833830095,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1837886875,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -521724618,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1172202349,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -809990980,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1839918745,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -308206927,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -185405473,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1178922796,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1699075879,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 902711403,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1564639777,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -732951221,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1374856252,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1843915155,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1016392690,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2133256229,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 553759683,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -933276206,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1023495905,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 255472468,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1989337510,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2010845764,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1093948975,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOptionString",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatOptionString"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOptionString"
        }
      },
      {
        "HashCode": 721820843,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOptionString",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatOptionString"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOptionString",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1068687441,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOptionString.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatOptionString"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOptionString.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 982865695,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOptionString.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatOptionString"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOptionString.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1200271937,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Slider for Blazor. Sliders let users select from a range of values by moving the slider thumb.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1101146708,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Slider for Blazor. Sliders let users select from a range of values by moving the slider thumb.\n            </summary>\n            <typeparam name=\"TValue\">sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2079732656,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design SlideToggle for Blazor. Component for on/off control that can be toggled via clicking or dragging.\n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -486958117,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design SlideToggle for Blazor. Component for on/off control that can be toggled via clicking or dragging.\n            </summary>\n            <typeparam name=\"TValue\">bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.BaseMatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1865101,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Snackbars provide brief messages about app processes at the bottom of the screen.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar"
        }
      },
      {
        "HashCode": -2030661591,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Snackbars provide brief messages about app processes at the bottom of the screen.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 361342000,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1317640344,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1845719224,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeader",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The MatSortHeader and MatSortHeaderRow are used, respectively, to add sorting state and display to tabular data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader"
        }
      },
      {
        "HashCode": -1385776232,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeader",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The MatSortHeader and MatSortHeaderRow are used, respectively, to add sorting state and display to tabular data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1722181115,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -442614594,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1259404651,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow"
        }
      },
      {
        "HashCode": 1480515091,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -250626080,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2100816136,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1496077300,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            WARNING: In Development progress\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabBar"
        }
      },
      {
        "HashCode": -1059983881,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            WARNING: In Development progress\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1326887893,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 574819649,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1377151693,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel"
        }
      },
      {
        "HashCode": 1198666693,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -164213820,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1564626559,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1346451091,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTable",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table display a table data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTable"
        }
      },
      {
        "HashCode": -1097937076,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTable",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table display a table data.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTable",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 378470235,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table Row display a table row   \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseTableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseTableRow"
        }
      },
      {
        "HashCode": 593156413,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Mat Table Row display a table row   \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseTableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseTableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 173745730,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseTableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseTableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseTableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1481780977,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseTableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseTableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseTableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1631869096,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTab"
        }
      },
      {
        "HashCode": 772129959,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTab",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1477044340,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1981935872,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2131350161,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1335148000,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "MatBlazor.BaseMatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1408431292,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatTabGroup organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup"
        }
      },
      {
        "HashCode": -80880497,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            MatTabGroup organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1152048197,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1996232738,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -959927696,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatStringField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatStringField"
        }
      },
      {
        "HashCode": -1366466920,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatStringField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatStringField",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -863519470,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatStringField.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatStringField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatStringField.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1087318459,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatStringField.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatStringField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatStringField.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1049733269,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Text Field for Blazor. Text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">string, sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?, DateTime, DateTime?, bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTextField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatTextField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1002698398,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Material Design Text Field for Blazor. Text fields allow users to input, edit, and select text.\n            </summary>\n            <typeparam name=\"TValue\">string, sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, decimal?, DateTime, DateTime?, bool, bool?</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTextField"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatTextField<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1173639872,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTextField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTextField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1885839527,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTextField<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTextField"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1834039640,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatThemeProvider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material Design color system can be used to create a color theme that reflects your brand or style.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider"
        }
      },
      {
        "HashCode": 119731556,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatThemeProvider",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material Design color system can be used to create a color theme that reflects your brand or style.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2119587939,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1595171997,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -952100603,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastContainer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastContainer"
        }
      },
      {
        "HashCode": 421149664,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastContainer",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 973409052,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastItem"
        }
      },
      {
        "HashCode": -1708108607,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatToastItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Toasts provide brief notifications or messages about app processes\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatToastItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 158827309,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 573354144,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1682490793,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTooltip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material tooltip provides a text label that is displayed when the user hovers an element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTooltip"
        }
      },
      {
        "HashCode": -1440325999,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatTooltip",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The Material tooltip provides a text label that is displayed when the user hovers an element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatTooltip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1574766318,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 406521156,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 721523082,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "BaseMatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1825530774,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "MatBlazor.BaseMatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1676141245,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeNode<TNode>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTreeNode"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeNode<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Node",
            "TypeName": "TNode",
            "Metadata": {
              "Common.PropertyName": "Node",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeNode<TNode>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1526259641,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeNode<TNode>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTreeNode"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeNode<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Node",
            "TypeName": "TNode",
            "Metadata": {
              "Common.PropertyName": "Node",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSelected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeNode<TNode>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 348548429,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Renders the data as a tree.\n            </summary>\n            <typeparam name=\"TNode\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeView<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The root node to be displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNodes",
            "TypeName": "System.Collections.Generic.IEnumerable<TNode>",
            "Documentation": "\n            <summary>\n            All the root nodes displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNodes",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The selected item in the tree\n            (Optional - default null)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NodeTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TNode>",
            "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NodeTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GetChildNodesCallback",
            "TypeName": "MatBlazor.GetChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that gets all the child nodes for a given parentNode.\n            If lazy loading is supported and the child nodes have not yet been \n            loaded then it should return null.\n            (Required)\n            </summary>\n            <remarks>\n            The function should return a collection of child nodes.\n               \n            This function maybe called many times for a given node.\n            \n            Loading on Demand\n            If Lazy loading is supported and the child nodes have not been loaded\n            then it should return null. \n            If null is returned then <see cref=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\" /> will be called to \n            get the child nodes, to it must have been set.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n            }        \n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "GetChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadChildNodesCallback",
            "TypeName": "MatBlazor.LoadChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function to lazy load child nodes. Only required if lazy loading / load on demand\n            is used. \n            (Optional - unless <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null)\n            </summary>\n            <remarks>\n            This function is called when <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null. \n            This causes this function to be called which should load all the child nodes.\n            The callback is asynchronous and should return when the values have been loaded.\n            \n            If an error occurs during the loading, then throw an exception (the exceptions message\n            will be shown in the UI). The function many be called again for the same node in order\n            to re-try.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" \n                        LoadChildNodesCallback=\"@LoadChildNodesAsync\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n                \n                private Task<IEnumerable<MyTreeNode>> LoadChildNodesAsync(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                    {\n                        await parentNode.Nodes = MyWebApi.GetChildNodes(parentNode.ID);\n                    }\n                        \n                    return parentNode.Nodes;\n                }        \n            }        \n            ]]></example>        \n        ",
            "Metadata": {
              "Common.PropertyName": "LoadChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNodeExpandedCallback",
            "TypeName": "MatBlazor.IsNodeExpandedDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that indicates if the given node is expanded or collapsed.\n            (Optional - if null then the expanded/collapsed state is managed by the <see cref=\"T:MatBlazor.MatTreeView`1\" />)\n            </summary>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@((myTreeNode)=>myTreeNode.IsExpanded)\" />\n            \n            or \n            \n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@IsExpanded\" />\n            ...\n            @code {\n                private bool IsExpanded(MyTreeNode myTreeNode)\n                {\n                    return myTreeNode.IsExpanded;\n                }\n            }\n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNodeExpandedCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandStateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.ExpandedStateChangedArgs<TNode>>",
            "Documentation": "\n            <summary>\n            An event raised when the expanded state of a node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandStateChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNodeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "\n            <summary>\n            An event raised when the selected node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNodeChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1228097812,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Renders the data as a tree.\n            </summary>\n            <typeparam name=\"TNode\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TNode",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TNode for the MatBlazor.MatTreeView<TNode> component.",
            "Metadata": {
              "Common.PropertyName": "TNode",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The root node to be displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RootNodes",
            "TypeName": "System.Collections.Generic.IEnumerable<TNode>",
            "Documentation": "\n            <summary>\n            All the root nodes displayed in the tree\n            One of the following must be supplied <see cref=\"P:MatBlazor.MatTreeView`1.RootNode\" /> or <see cref=\"P:MatBlazor.MatTreeView`1.RootNodes\" /> (but NOT BOTH)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RootNodes",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNode",
            "TypeName": "TNode",
            "Documentation": "\n            <summary>\n            The selected item in the tree\n            (Optional - default null)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNode",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NodeTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TNode>",
            "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NodeTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GetChildNodesCallback",
            "TypeName": "MatBlazor.GetChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that gets all the child nodes for a given parentNode.\n            If lazy loading is supported and the child nodes have not yet been \n            loaded then it should return null.\n            (Required)\n            </summary>\n            <remarks>\n            The function should return a collection of child nodes.\n               \n            This function maybe called many times for a given node.\n            \n            Loading on Demand\n            If Lazy loading is supported and the child nodes have not been loaded\n            then it should return null. \n            If null is returned then <see cref=\"P:MatBlazor.MatTreeView`1.LoadChildNodesCallback\" /> will be called to \n            get the child nodes, to it must have been set.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n            }        \n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "GetChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadChildNodesCallback",
            "TypeName": "MatBlazor.LoadChildNodesDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function to lazy load child nodes. Only required if lazy loading / load on demand\n            is used. \n            (Optional - unless <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null)\n            </summary>\n            <remarks>\n            This function is called when <see cref=\"P:MatBlazor.MatTreeView`1.GetChildNodesCallback\" /> returns null. \n            This causes this function to be called which should load all the child nodes.\n            The callback is asynchronous and should return when the values have been loaded.\n            \n            If an error occurs during the loading, then throw an exception (the exceptions message\n            will be shown in the UI). The function many be called again for the same node in order\n            to re-try.\n            </remarks>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        GetChildNodesCallback=\"@GetChildNodes\" \n                        LoadChildNodesCallback=\"@LoadChildNodesAsync\" />\n            ...\n            @code {\n                private IEnumerable<MyTreeNode> GetChildNodes(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                        return null; // LoadChildrenCallbackAsync will be called to load the child nodes\n                        \n                    return parentNode.Nodes;\n                }\n                \n                private Task<IEnumerable<MyTreeNode>> LoadChildNodesAsync(MyTreeNode parentNode)\n                {\n                    if (parentNode.AreChildrenLoaded == false)\n                    {\n                        await parentNode.Nodes = MyWebApi.GetChildNodes(parentNode.ID);\n                    }\n                        \n                    return parentNode.Nodes;\n                }        \n            }        \n            ]]></example>        \n        ",
            "Metadata": {
              "Common.PropertyName": "LoadChildNodesCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNodeExpandedCallback",
            "TypeName": "MatBlazor.IsNodeExpandedDelegate<TNode>",
            "Documentation": "\n            <summary>\n            A function that indicates if the given node is expanded or collapsed.\n            (Optional - if null then the expanded/collapsed state is managed by the <see cref=\"T:MatBlazor.MatTreeView`1\" />)\n            </summary>\n            <example><![CDATA[\n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@((myTreeNode)=>myTreeNode.IsExpanded)\" />\n            \n            or \n            \n            <MatTreeView TNode=\"MyTreeNode\"\n                        IsNodeExpandedCallback=\"@IsExpanded\" />\n            ...\n            @code {\n                private bool IsExpanded(MyTreeNode myTreeNode)\n                {\n                    return myTreeNode.IsExpanded;\n                }\n            }\n            ]]></example>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNodeExpandedCallback",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandStateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.ExpandedStateChangedArgs<TNode>>",
            "Documentation": "\n            <summary>\n            An event raised when the expanded state of a node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandStateChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedNodeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "\n            <summary>\n            An event raised when the selected node changes\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedNodeChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -780380645,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NodeTemplate",
            "ParentTag": "MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NodeTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2042041530,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The template used to render the Node\n            (Required)\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NodeTemplate",
            "ParentTag": "MatBlazor.MatTreeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NodeTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>.NodeTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1430043364,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline1"
        }
      },
      {
        "HashCode": -1689837426,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 639777552,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -265689001,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 694821831,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline2"
        }
      },
      {
        "HashCode": 837176804,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2008399105,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 568321745,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -3478683,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline3"
        }
      },
      {
        "HashCode": -217474138,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline3",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2049109567,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 479365161,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1798234941,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline4"
        }
      },
      {
        "HashCode": 807158228,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline4",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 60767172,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1337091859,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1029613461,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline5"
        }
      },
      {
        "HashCode": -742809027,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline5",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 810397066,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1215589217,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 381553829,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHeadline6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline6"
        }
      },
      {
        "HashCode": -9042317,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHeadline6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHeadline6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHeadline6",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2137690637,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHeadline6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1517961024,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHeadline6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHeadline6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHeadline6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1888788127,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH1"
        }
      },
      {
        "HashCode": -1133819807,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 502366309,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -19653356,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1233827306,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH2"
        }
      },
      {
        "HashCode": 2079274917,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 779597606,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1364449776,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1630098986,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH3"
        }
      },
      {
        "HashCode": 612239448,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH3",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH3"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH3",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2051891813,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 457333045,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH3.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH3"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH3.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 17632039,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH4"
        }
      },
      {
        "HashCode": 763050620,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH4",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH4"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH4",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -136100699,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1908681126,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH4.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH4"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH4.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -30339118,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH5"
        }
      },
      {
        "HashCode": -1759140391,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH5",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH5"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH5",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 697462619,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -969486457,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH5.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH5"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH5.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -72107214,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatH6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH6"
        }
      },
      {
        "HashCode": 1575151664,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatH6",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatH6"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatH6",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -808402499,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatH6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 681235297,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatH6.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatH6"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatH6.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2032965808,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSubtitle1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle1"
        }
      },
      {
        "HashCode": 18715632,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSubtitle1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 901894463,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSubtitle1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1763865739,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSubtitle1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1407626126,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSubtitle2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle2"
        }
      },
      {
        "HashCode": 1015351340,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSubtitle2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSubtitle2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSubtitle2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1873525519,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSubtitle2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -141372820,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSubtitle2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSubtitle2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSubtitle2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1325768017,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBody1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody1"
        }
      },
      {
        "HashCode": -1250610654,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody1",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatBody1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1026369264,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBody1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2103183414,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody1.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatBody1"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody1.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 794843444,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBody2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody2"
        }
      },
      {
        "HashCode": 986515982,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatBody2",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatBody2"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatBody2",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -270153271,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBody2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -570763643,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatBody2.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatBody2"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatBody2.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2024505479,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCaption",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCaption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCaption"
        }
      },
      {
        "HashCode": 2130257491,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCaption",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCaption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCaption",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1769895408,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCaption.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCaption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCaption.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1333844893,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCaption.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCaption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCaption.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1073771571,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOverline",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatOverline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOverline"
        }
      },
      {
        "HashCode": 1786271635,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatOverline",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatOverline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Anchor",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Anchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AnchorId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AnchorId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tag",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tag"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatOverline",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -538419481,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOverline.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatOverline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOverline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1757324940,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatOverline.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatOverline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatOverline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -280007624,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The VirtualScroll for Blazor displays large lists of elements performantly by only rendering the items that fit on-screen.\n            Loading hundreds of elements can be slow in any browser; virtual scrolling enables a performant way to simulate all items being rendered by making the height of the container element the same as the height of total number of elements to be rendered, and then only rendering the items in view.\n            </summary>\n            <typeparam name=\"TItem\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatVirtualScroll<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -735533280,
        "Kind": "Components.Component",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            The VirtualScroll for Blazor displays large lists of elements performantly by only rendering the items that fit on-screen.\n            Loading hundreds of elements can be slow in any browser; virtual scrolling enables a performant way to simulate all items being rendered by making the height of the container element the same as the height of total number of elements to be rendered, and then only rendering the items in view.\n            </summary>\n            <typeparam name=\"TItem\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.BaseMatVirtualScroll<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1079959295,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BaseMatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1745745245,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.BaseMatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2047079846,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1450393777,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.BaseMatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.BaseMatVirtualScroll<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2029022523,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatViewChildren<TSelect>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatViewChildren"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TSelect",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TSelect for the MatBlazor.MatViewChildren<TSelect> component.",
            "Metadata": {
              "Common.PropertyName": "TSelect",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 87246183,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatViewChildren<TSelect>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatViewChildren"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TSelect",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TSelect for the MatBlazor.MatViewChildren<TSelect> component.",
            "Metadata": {
              "Common.PropertyName": "TSelect",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1093217571,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatViewChildren"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1497168598,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatViewChildren"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatViewChildren<TSelect>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -201180581,
        "Kind": "Components.Component",
        "Name": "MatBlazor.ForwardRefContext<TRef>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TRef",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TRef for the MatBlazor.ForwardRefContext<TRef> component.",
            "Metadata": {
              "Common.PropertyName": "TRef",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef<TRef>>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 731056944,
        "Kind": "Components.Component",
        "Name": "MatBlazor.ForwardRefContext<TRef>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TRef",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TRef for the MatBlazor.ForwardRefContext<TRef> component.",
            "Metadata": {
              "Common.PropertyName": "TRef",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef<TRef>>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1764714949,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -698685089,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.ForwardRefContext"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.ForwardRefContext<TRef>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1743971710,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCombine",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCombine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCombine"
        }
      },
      {
        "HashCode": -1015784050,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCombine",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCombine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCombine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 528705498,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatContentWrapper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatContentWrapper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatContentWrapper"
        }
      },
      {
        "HashCode": 198121317,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatContentWrapper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatContentWrapper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatContentWrapper",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1305661862,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatContentWrapper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatContentWrapper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatContentWrapper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1202119889,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatContentWrapper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatContentWrapper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatContentWrapper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -497396605,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatItemsControl<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatItemsControl<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "DefaultItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<T>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1320044215,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatItemsControl<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatItemsControl<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "DefaultItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<T>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -819243112,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DefaultItemTemplate",
            "ParentTag": "MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'DefaultItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1677909298,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DefaultItemTemplate",
            "ParentTag": "MatBlazor.MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'DefaultItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.DefaultItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1603589300,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -181680990,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatItemsControl<T>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatItemsControl"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatItemsControl<T>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 478793395,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -297793836,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocompleteList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The label of the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Icon displayed as the leading icon for the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StringValue",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The StringValue displayed in the TextField\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StringValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The value to be used to pre-select an item from the list\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            ValueChanged is fired when the value is selected(by clicking on an element in the popup)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomStringSelector",
            "TypeName": "System.Func<TItem, System.String>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomStringSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            The collection which should be rendered and filtered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If this parameter is true then the style of the textbox is outlined see `MatTextfield`\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            OnOpenedChanged is fired when the popup dialog is opened or close and the parameter indicates whenever is it open, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnOpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnTextChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            OnTextChanged is fired when the string value is changed(when an input occurs in the textfield or when an item is selected)\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnTextChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowClearButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the clear button(using a trailing icon) should be displayed, which can clear the entire text and the selected value), the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This value indicates if the textfield and the dialog will be or not displayed in the full screen, the default value is false\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1986215512,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 167832020,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatAutocompleteList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -663356403,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1666358222,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatAutocomplete<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Documentation": "\n            <summary>\n            This function is used to select the string part from the item, used both for filtering and displaying if no ItemTemplate is defined.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NumberOfElementsInPopup",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Maximum number of elements displayed in the popup\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NumberOfElementsInPopup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1349629414,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -455483285,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            ItemTemplate is used to render the elements in the popup if no template is given then the string value of the objects is displayed..\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatAutocomplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 798138669,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 371036396,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatAutocomplete"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1608833958,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButtonLink"
        }
      },
      {
        "HashCode": 1101853361,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatButtonLink",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatButtonLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Link to a url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Raised",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has raised style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Raised"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unelevated",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has unelevated style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unelevated"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has outlined style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link has dense style.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Link is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the link's icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies if icon has trailing position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatButtonLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2102895031,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1233975800,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatButtonLink.ChildContent",
        "AssemblyName": "MatBlazor",
        "Documentation": "\n            <summary>\n            Inline label of Button.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatButtonLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatButtonLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2036413809,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1543577845,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckboxInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatCheckboxInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputValue",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "InputValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 614862699,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -176648537,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatCheckboxInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1954998141,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld"
        }
      },
      {
        "HashCode": -235968078,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1436153967,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -833561076,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -951340584,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1308637667,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableColumnOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sort"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 479951999,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -594501996,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "MatBlazor.MatDataTableColumnOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1230629638,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "MatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2011829267,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "MatBlazor.MatDataTableColumnOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableColumnOld<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -617732731,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContentOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableContentOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld"
        }
      },
      {
        "HashCode": -1443295662,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableContentOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableContentOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -361804264,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContentOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableContentOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1544226852,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableContentOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableContentOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableContentOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 876213054,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableHeaderCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld"
        }
      },
      {
        "HashCode": 882759782,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderCellOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableHeaderCellOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Numeric",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Numeric"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1381663767,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableHeaderCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1366050885,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableHeaderCellOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderCellOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -331079654,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableHeaderOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld"
        }
      },
      {
        "HashCode": -109954235,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableHeaderOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableHeaderOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1944457049,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableHeaderOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 617253105,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableHeaderOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableHeaderOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableHeaderOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1928075705,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 867785796,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableOld<TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatDataTableOld<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StickyHeader",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "StickyHeader"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VirtualScroll",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "VirtualScroll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paginator",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Paginator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1352686628,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "MatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 419006209,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableOld<TItem>.Columns",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "MatBlazor.MatDataTableOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableOld<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -718161379,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableRowOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDataTableRowOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld"
        }
      },
      {
        "HashCode": 1934255935,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDataTableRowOld",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDataTableRowOld"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1347180376,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableRowOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDataTableRowOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1062901868,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDataTableRowOld.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDataTableRowOld"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDataTableRowOld.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1095769008,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePickerInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePickerInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -339462388,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePickerInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatDatePickerInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTime",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSeconds",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.DateTime?",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableCalendar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableCalendar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable24hours",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enable24hours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableWeekNumbers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableWeekNumbers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisableMobile",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "DisableMobile"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatDatePickerPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Locale",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Locale"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1296153526,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDatePickerInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1334047350,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDatePickerInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2050614584,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAlert",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogAlert"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAlert"
        }
      },
      {
        "HashCode": 1998148084,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAlert",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogAlert"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAlert",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 791866478,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAsk",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogAsk"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Answers",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Metadata": {
              "Common.PropertyName": "Answers"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAsk"
        }
      },
      {
        "HashCode": -462964019,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogAsk",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogAsk"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Answers",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Metadata": {
              "Common.PropertyName": "Answers"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogAsk",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1662603247,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogConfirm",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogConfirm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogConfirm"
        }
      },
      {
        "HashCode": -1454210471,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogConfirm",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogConfirm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogConfirm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1919634083,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogPrompt",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogPrompt"
        }
      },
      {
        "HashCode": 1449170582,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogPrompt",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogPrompt",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 671588948,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogServiceItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogServiceItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "DialogReference",
            "TypeName": "MatBlazor.MatDialogReference",
            "Metadata": {
              "Common.PropertyName": "DialogReference"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogServiceItem"
        }
      },
      {
        "HashCode": 1899710907,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogServiceItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogServiceItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "DialogReference",
            "TypeName": "MatBlazor.MatDialogReference",
            "Metadata": {
              "Common.PropertyName": "DialogReference"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogServiceItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1019016,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialog"
        }
      },
      {
        "HashCode": 848916390,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialog"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Event occurs when the dialog is opened or closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CanBeClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Indicates if the user is able to close the dialog via Escape or click on the Scrim.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CanBeClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SurfaceStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SurfaceStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 235317369,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1353968892,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialog.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialog.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 789000292,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogActions"
        }
      },
      {
        "HashCode": -1820800530,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogActions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1530504288,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialogActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2085180986,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialogActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 732996577,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogContent"
        }
      },
      {
        "HashCode": -1578102545,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2096861571,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialogContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1235552103,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialogContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1881162571,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialogTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogTitle"
        }
      },
      {
        "HashCode": -614107164,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDialogTitle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialogTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDialogTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1071648081,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDialogTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1835436521,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDialogTitle.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDialogTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDialogTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 857996404,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContainer"
        }
      },
      {
        "HashCode": -916022915,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawerContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawerWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DrawerWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -904130438,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1650645176,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContainer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDrawerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -573277486,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContent"
        }
      },
      {
        "HashCode": -204726352,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawerContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawerContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawerContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1848201588,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 969782505,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawerContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDrawerContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawerContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1425123333,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawer"
        }
      },
      {
        "HashCode": 802582848,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "MatBlazor.MatDrawerMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTabIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ContentTabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opened",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Opened"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OpenedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -510662251,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 285195580,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatDrawer.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatDrawer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatDrawer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -151812621,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFAB",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFAB"
        }
      },
      {
        "HashCode": -166427415,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFAB",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatFAB"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mini",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Mini"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFAB",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1907732515,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -507181049,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatFAB.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatFAB"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatFAB.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -271437043,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFileUpload"
        }
      },
      {
        "HashCode": 938575141,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatFileUpload",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatFileUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.IMatFileUploadEntry[]>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiple",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowMultiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxMessageLength",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxMessageLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatFileUpload",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1092489289,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHelperText"
        }
      },
      {
        "HashCode": -1284842439,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHelperText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHelperText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterCount",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CharacterCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHelperText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 712950271,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHidden",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHidden"
        }
      },
      {
        "HashCode": -1967251977,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatHidden",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatHidden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ElseContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ElseContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "InitContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Breakpoint",
            "TypeName": "MatBlazor.MatBreakpoint",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Breakpoint"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatHiddenDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HiddenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HiddenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatHidden",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -857885340,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1275200789,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -513245440,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 469054044,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.ElseContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ElseContent",
            "ParentTag": "MatBlazor.MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.ElseContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 541956624,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1209667842,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatHidden.InitContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InitContent",
            "ParentTag": "MatBlazor.MatHidden"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatHidden.InitContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -480173500,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIconButton"
        }
      },
      {
        "HashCode": -1238963861,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatIconButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Default Button Icon\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Target of Link when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleIcon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Icon to use when Button is clicked\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Toggled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Toggled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggledChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ToggledChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Link",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Navigate to this url when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Link"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n            \n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Button is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n             Event occurs when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickStopPropagation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Stop propagation of the OnClick event\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClickStopPropagation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1129801633,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1858108574,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIconButton.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatIconButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIconButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1820329921,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIcon"
        }
      },
      {
        "HashCode": 2108253175,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatIcon",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 528808483,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1954393908,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatIcon.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -340619482,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroup"
        }
      },
      {
        "HashCode": 1856643245,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 456717950,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -730635280,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1969858057,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroupSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListGroupSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader"
        }
      },
      {
        "HashCode": 1576921274,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListGroupSubHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListGroupSubHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -446240843,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroupSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListGroupSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1959855649,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListGroupSubHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListGroupSubHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListGroupSubHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1213983352,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatList"
        }
      },
      {
        "HashCode": 1770455517,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "SingleSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TwoLine",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TwoLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1663360197,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1418638374,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -764685731,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListDivider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListDivider"
        }
      },
      {
        "HashCode": -1908590154,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListDivider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListDivider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListDivider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 505068258,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItem"
        }
      },
      {
        "HashCode": 1207607201,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 167395840,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 992981605,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1887121156,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemPrimaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItemPrimaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText"
        }
      },
      {
        "HashCode": -95350304,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemPrimaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItemPrimaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -328198832,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemPrimaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItemPrimaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -963601639,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemPrimaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItemPrimaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemPrimaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -94739143,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemSecondaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItemSecondaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText"
        }
      },
      {
        "HashCode": -414222530,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemSecondaryText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItemSecondaryText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1058282357,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemSecondaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItemSecondaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 804469569,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemSecondaryText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItemSecondaryText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemSecondaryText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 898367941,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatListItemText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemText"
        }
      },
      {
        "HashCode": -2001718149,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatListItemText",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatListItemText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatListItemText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 407714946,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatListItemText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 132298505,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatListItemText.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatListItemText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatListItemText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 674665884,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatMenu"
        }
      },
      {
        "HashCode": 230818388,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -27364435,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1583391666,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -823919111,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavItem"
        }
      },
      {
        "HashCode": -446031717,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Command",
            "TypeName": "System.Windows.Input.ICommand",
            "Documentation": "\n            <summary>\n             Command executed when the user clicks on an element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Command"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForceLoad",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Force browser to redirect outside component router-space.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForceLoad"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandParameter",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n             Command parameter.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandParameter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            *Not yet functional - Target of Href when clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NavLinkMatch",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n             NavLinkMatch parameter used to determine the active state of the Nav Item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NavLinkMatch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you the Nav Item can be selected / active.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMouseDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnMouseDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of the List Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            List Item is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -963225992,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1887678569,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1097992211,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavMenu"
        }
      },
      {
        "HashCode": 763023322,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multi",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Multi"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 922531860,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1296751264,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1260595700,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenu"
        }
      },
      {
        "HashCode": -448917757,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1029074746,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -870524316,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenu.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavSubMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -529696679,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenuHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader"
        }
      },
      {
        "HashCode": 2065596129,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenuHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The title shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -622680928,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavSubMenuHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -568982348,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavSubMenuHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1284937631,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenuList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList"
        }
      },
      {
        "HashCode": 1118778952,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNavSubMenuList",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenuList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2007350742,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNavSubMenuList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 974711750,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNavSubMenuList.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNavSubMenuList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNavSubMenuList.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1173102939,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1626538806,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownFieldInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatNumericUpDownFieldInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Maximum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Minimum",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DecimalPlaces",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "DecimalPlaces"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FieldType",
            "TypeName": "MatBlazor.MatNumericUpDownFieldType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FieldType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1206134819,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 617334441,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatNumericUpDownFieldInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -946698964,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaginator"
        }
      },
      {
        "HashCode": -308453718,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaginator",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatPaginator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatPaginatorPageEvent>",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "PageIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IReadOnlyList<MatBlazor.MatPageSizeOption>",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaginator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1934554959,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaper"
        }
      },
      {
        "HashCode": 1348675238,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPaper",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatPaper"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Elevation",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Level of the Elevation. \n            From 0 to 24.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Elevation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses outlined surface. If true, removes Elevation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rounded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Uses round border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rounded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPaper",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -610623690,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -675516975,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatPaper.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatPaper"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatPaper.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1360803664,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPortalHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatPortalHost"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPortalHost"
        }
      },
      {
        "HashCode": -2127507224,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatPortalHost",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatPortalHost"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatPortalHost",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 183079121,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressBar"
        }
      },
      {
        "HashCode": -2086521639,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reversed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Reversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Buffer",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Buffer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -700502089,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressCircle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressCircle"
        }
      },
      {
        "HashCode": 735622692,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatProgressCircle",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatProgressCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the component between the determinate and indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Closed",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n            If true, Puts the component in the closed state.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Closed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "MatBlazor.MatProgressCircleSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets the size of the circular progress bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the progress bar to this value. Value should be between [0, 1].\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FourColored",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IF true, Applies four animated stroke-colors to the indeterminate indicator. Applicable to the indeterminate variant only and overrides any single color currently set.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FourColored"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatProgressCircle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1448578751,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1047403309,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioButtonInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioButtonInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 167005017,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1076616780,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioButtonInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioButtonInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 566423026,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 150662665,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatRadioGroupInternal<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -857970363,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -167737602,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatRadioGroupInternal"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 737837544,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1910169645,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRadioGroupInternal"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1358811798,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRipple",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRipple"
        }
      },
      {
        "HashCode": -885178537,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatRipple",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRipple"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "MatBlazor.MatRippleColor",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatRipple",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -751188571,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -564857810,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatRipple.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatRipple"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatRipple.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 118570945,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 74835819,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatOption<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatOption"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatOption<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1511908633,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -472098206,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatOption<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.CoreMatOption"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatOption<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1017836374,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 474379166,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TKey",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TKey for the MatBlazor.CoreMatSelect<TValue, TKey> component.",
            "Metadata": {
              "Common.PropertyName": "TKey",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 184701545,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1060460110,
        "Kind": "Components.Component",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.CoreMatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -656345560,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 857781258,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.CoreMatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1162663581,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CoreMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1659735209,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.CoreMatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 333986287,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1686291963,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -544166424,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1029291275,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelect<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -148340393,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -648972738,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TValue>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TValue>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1441926537,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1949122683,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatSelectItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1624562733,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1641765902,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectItem<TValue>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSelectItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -974670489,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 777221273,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the MatBlazor.MatSelectValue<TValue, TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueSelector",
            "TypeName": "System.Func<TItem, TValue>",
            "Metadata": {
              "Common.PropertyName": "ValueSelector",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IReadOnlyList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhanced",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Enhanced"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideDropDownIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideDropDownIcon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -732290695,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -53563630,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatSelectValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -7302581,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 461248013,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSelectValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1224871967,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1761293692,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMin",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMin",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueMax",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "ValueMax",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Discrete",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Discrete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Markers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pin",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Pin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "TValue",
            "Metadata": {
              "Common.PropertyName": "Step",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableStep",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "EnableStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Immediate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When set to true, any change to the slider immediately changes the value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Immediate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1519662258,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 868454649,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlideToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the MatBlazor.MatSlideToggle<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 92142349,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbar"
        }
      },
      {
        "HashCode": -943810192,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stacked",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Positions the action buttons below the label instead of alongside it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stacked"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Leading",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             Displays the snackbar on the \"leading edge\" of the screen (the left side in LTR, or the right side in RTL). \n            \n             By default, snackbars are centered horizontally within the viewport. On larger screens, they can optionally be displayed on the leading edge by setting this property.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Leading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Controls whether or not the snackbar is shown.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Timeout",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Timeout in ms after which the snackbar closes itself. Default: 10000 ms\n            To leave the snackbar open indefinitely set the timeout to -1\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Timeout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsOpenChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            This event is raised whenever IsOpen changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsOpenChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 404180732,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -970370620,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSnackbar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1674992121,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbarActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarActions"
        }
      },
      {
        "HashCode": 1353057447,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarActions",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbarActions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarActions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -371782811,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSnackbarActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -283569385,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarActions.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSnackbarActions"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarActions.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1489659673,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarContent"
        }
      },
      {
        "HashCode": 1200388793,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSnackbarContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSnackbarContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 678699635,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSnackbarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1548353702,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSnackbarContent.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSnackbarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSnackbarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -502989426,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeader"
        }
      },
      {
        "HashCode": -1448278223,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 856498966,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1237431483,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeader.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSortHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1417818015,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow"
        }
      },
      {
        "HashCode": 1869455419,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeaderRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SortId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortIdChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SortIdChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "MatBlazor.MatSortDirection",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DirectionChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "Metadata": {
              "Common.PropertyName": "DirectionChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortChangedEvent>",
            "Metadata": {
              "Common.PropertyName": "SortChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1860841132,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1307947304,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatSortHeaderRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatSortHeaderRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1410603151,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabBar"
        }
      },
      {
        "HashCode": -2088933405,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Active",
            "TypeName": "MatBlazor.BaseMatTabLabel",
            "Metadata": {
              "Common.PropertyName": "Active"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Metadata": {
              "Common.PropertyName": "ActiveChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -469750301,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 173342961,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabBar.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTabBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabBar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1536102580,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabLabel"
        }
      },
      {
        "HashCode": 1062604463,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabLabel",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 734927554,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1990508715,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabLabel.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTabLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1651577402,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTable<TableItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TableItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TableItem for the MatBlazor.MatTable<TableItem> component.",
            "Metadata": {
              "Common.PropertyName": "TableItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableHeader",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "MatTableHeader",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UseSortHeaderRow",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "UseSortHeaderRow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableRow",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TableItem>",
            "Metadata": {
              "Common.PropertyName": "MatTableRow",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizes",
            "TypeName": "MatBlazor.BaseMatTable.PageSizeStructure[]",
            "Documentation": "\n            <summary>\n            Not Functioning\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TableItem>",
            "Documentation": "\n            <summary>\n            Specifies the data for the table.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1349304416,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTable<TableItem>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TableItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TableItem for the MatBlazor.MatTable<TableItem> component.",
            "Metadata": {
              "Common.PropertyName": "TableItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableHeader",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "MatTableHeader",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UseSortHeaderRow",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "UseSortHeaderRow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MatTableRow",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TableItem>",
            "Metadata": {
              "Common.PropertyName": "MatTableRow",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizes",
            "TypeName": "MatBlazor.BaseMatTable.PageSizeStructure[]",
            "Documentation": "\n            <summary>\n            Not Functioning\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<TableItem>",
            "Documentation": "\n            <summary>\n            Specifies the data for the table.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageSizeParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Descending",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Descending"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DescendingParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DescendingParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortBy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortBy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortByParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortByParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageRecordCountLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PageRecordCountLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingDataPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingDataPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingRecordsCountPropertyName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PagingRecordsCountPropertyName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermParamName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SearchTermParamName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "SelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderRowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableHeader row\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderRowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a custom class for the MatTableRow\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies weather you can select a single row.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestApiOnlyOnce",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to Request the API only once.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestApiOnlyOnce"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebounceMilliseconds",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the delay duration between user input on the Search Term Field. Default 800\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DebounceMilliseconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterByColumnName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies which column is used for the filter / search term. If this is populated the Search Textbox will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterByColumnName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Label for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchTermFieldPlaceHolder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Placeholder for the Filter / Search Term  Textbox\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchTermFieldPlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadInitialData",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies where to Load the Initial Table Data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadInitialData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the API Url form for the table data\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Paging visibility\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFooter",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Table Footer visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFooter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Striped",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if table has alternating color rows.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Striped"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The number of rows per page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRowDbClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Action to execute on row item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnRowDbClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1382356000,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableHeader",
            "ParentTag": "MatTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableHeader",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2042208988,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableHeader",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableHeader",
            "ParentTag": "MatBlazor.MatTable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableHeader",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1937995618,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableRow",
            "ParentTag": "MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'MatTableRow' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableRow",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -392449557,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTable<TableItem>.MatTableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTableRow",
            "ParentTag": "MatBlazor.MatTable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'MatTableRow' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTable<TableItem>.MatTableRow",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1452247333,
        "Kind": "Components.Component",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.TableRow"
        }
      },
      {
        "HashCode": 1819630487,
        "Kind": "Components.Component",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.TableRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelection",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowItem",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "RowItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "SelectedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.TableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 556865708,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.TableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "TableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.TableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1936906909,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.TableRow.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.TableRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.TableRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1145936953,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTab"
        }
      },
      {
        "HashCode": -833394847,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTab",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTab"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LabelContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTab",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -960315515,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 904790300,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 181209458,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 886237913,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTab.LabelContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LabelContent",
            "ParentTag": "MatBlazor.MatTab"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTab.LabelContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -684051182,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabGroup"
        }
      },
      {
        "HashCode": -150660878,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ActiveIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ActiveIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "ActiveIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2143815633,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 607762325,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTabGroup.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTabGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTabGroup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -393831401,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatInputTextComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatInputTextComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 851811997,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatInputTextComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the MatBlazor.MatInputTextComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconOnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Metadata": {
              "Common.PropertyName": "IconOnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocus",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnFocusOut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnFocusOut",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyPress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyPress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyDown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyDown",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnKeyUp",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnKeyUp",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Metadata": {
              "Common.PropertyName": "OnInput",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconTrailing",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IconTrailing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Box",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Box"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextArea",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "TextArea"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Dense",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Dense"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Outlined",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Outlined"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, it specifies that an input field is read-only.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FullWidth",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FullWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Required",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Required"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HelperText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextPersistent",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextPersistent"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HelperTextValidation",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HelperTextValidation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceHolder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PlaceHolder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideClearButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "HideClearButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Css class of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Style attribute of input element\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "InputAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValidationDisabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ValidationDisabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 719750487,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatInputTextComponent<T>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatInputTextComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 989009495,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatInputTextComponent<T>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatInputTextComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -493468229,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatThemeProvider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatThemeProvider"
        }
      },
      {
        "HashCode": -2132313566,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatThemeProvider",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatThemeProvider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "MatBlazor.MatTheme",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatThemeProvider",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 517229458,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1911703810,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatThemeProvider.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatThemeProvider"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatThemeProvider.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1934083045,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastContainer"
        }
      },
      {
        "HashCode": 1393202752,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastContainer",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatToastContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 526729892,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastItem"
        }
      },
      {
        "HashCode": -133439147,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatToastItem",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatToastItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Toast",
            "TypeName": "MatBlazor.MatToast",
            "Metadata": {
              "Common.PropertyName": "Toast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "MatBlazor.MatToastType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatToastItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 646268595,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -422487213,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatToastItem.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatToastItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatToastItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -414094080,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTooltip",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTooltip"
        }
      },
      {
        "HashCode": -1675865323,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatTooltip",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<MatBlazor.ForwardRef>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "TooltipContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tooltip",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Tooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TargetId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Wrap",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Wrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "MatBlazor.MatTooltipPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TargetForwardRef",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "TargetForwardRef"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatTooltip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -549353558,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -369743508,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1491280709,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "MatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 195318236,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatTooltip.TooltipContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContent",
            "ParentTag": "MatBlazor.MatTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatTooltip.TooltipContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1059088954,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ItemType",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter ItemType for the MatBlazor.MatVirtualScroll<ItemType> component.",
            "Metadata": {
              "Common.PropertyName": "ItemType",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<ItemType>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<ItemType>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 974390926,
        "Kind": "Components.Component",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ItemType",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter ItemType for the MatBlazor.MatVirtualScroll<ItemType> component.",
            "Metadata": {
              "Common.PropertyName": "ItemType",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemHeight",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ItemHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<ItemType>",
            "Metadata": {
              "Common.PropertyName": "ItemTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IEnumerable<ItemType>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies one or more classnames for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies an inline style for an DOM element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RefBack",
            "TypeName": "MatBlazor.ForwardRef",
            "Metadata": {
              "Common.PropertyName": "RefBack"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -963213647,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -507316600,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "MatBlazor.MatVirtualScroll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1841938934,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1448770013,
        "Kind": "Components.ChildContent",
        "Name": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
        "AssemblyName": "MatBlazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemTemplate",
            "ParentTag": "MatBlazor.MatVirtualScroll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "MatBlazor.MatVirtualScroll<ItemType>.ItemTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 622345495,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
        }
      },
      {
        "HashCode": 1479744482,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 889659461,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 400059055,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1161434938,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 513597201,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1937775232,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Policy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Roles"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
        }
      },
      {
        "HashCode": -136746025,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Policy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Roles"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 715373362,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1558470740,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1611519185,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2032506303,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1790521029,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1053276291,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1705179084,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 340902021,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1646467020,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
        }
      },
      {
        "HashCode": -780954994,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 748501876,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1994871662,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1596203606,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -177830205,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -35271158,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1719854044,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 922371580,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView"
        }
      },
      {
        "HashCode": 2795776,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -914564881,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1306841505,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 370922793,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView"
        }
      },
      {
        "HashCode": -1708901950,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1579178077,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router"
        }
      },
      {
        "HashCode": -2062651466,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1003405967,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -844476251,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1575119208,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1102897959,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 708702552,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -798934847,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2052074691,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
        }
      },
      {
        "HashCode": 73096226,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1436460170,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm"
        }
      },
      {
        "HashCode": 870285931,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 809561266,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1647597665,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1279141736,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": -200801175,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1965617958,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1850679914,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2113963652,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile"
        }
      },
      {
        "HashCode": 1852972562,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 412125931,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1904864130,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1333347381,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -22873129,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1239836607,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -350018879,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 212756210,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 34990657,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1025600496,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1873727229,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 792233324,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1018782829,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 705667761,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": 2139162199,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1889729923,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": 1091411518,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1605464162,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -324456474,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1180271355,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
        }
      },
      {
        "HashCode": 2136457671,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2135673687,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink"
        }
      },
      {
        "HashCode": 399305593,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1995677619,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 880671840,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1409179337,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemsProvider",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverscanCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1466918058,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemsProvider",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverscanCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -80136384,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 645001219,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1508856971,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 153812951,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1243321575,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -688767184,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -644107692,
        "Kind": "Components.EventHandler",
        "Name": "onfocus",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocus"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 301076750,
        "Kind": "Components.EventHandler",
        "Name": "onblur",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onblur",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onblur"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 475121854,
        "Kind": "Components.EventHandler",
        "Name": "onfocusin",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusin",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusin"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -740336861,
        "Kind": "Components.EventHandler",
        "Name": "onfocusout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1118096845,
        "Kind": "Components.EventHandler",
        "Name": "onmouseover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1925457217,
        "Kind": "Components.EventHandler",
        "Name": "onmouseout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 44595426,
        "Kind": "Components.EventHandler",
        "Name": "onmousemove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousemove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousemove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -64536435,
        "Kind": "Components.EventHandler",
        "Name": "onmousedown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousedown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousedown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1194751786,
        "Kind": "Components.EventHandler",
        "Name": "onmouseup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 222693111,
        "Kind": "Components.EventHandler",
        "Name": "onclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1316280423,
        "Kind": "Components.EventHandler",
        "Name": "ondblclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondblclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondblclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1363293015,
        "Kind": "Components.EventHandler",
        "Name": "onwheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -23599152,
        "Kind": "Components.EventHandler",
        "Name": "onmousewheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousewheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousewheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1311546515,
        "Kind": "Components.EventHandler",
        "Name": "oncontextmenu",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncontextmenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncontextmenu"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1016713988,
        "Kind": "Components.EventHandler",
        "Name": "ondrag",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrag",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrag"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1005441234,
        "Kind": "Components.EventHandler",
        "Name": "ondragend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -621103889,
        "Kind": "Components.EventHandler",
        "Name": "ondragenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1960065148,
        "Kind": "Components.EventHandler",
        "Name": "ondragleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1481930962,
        "Kind": "Components.EventHandler",
        "Name": "ondragover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1619121685,
        "Kind": "Components.EventHandler",
        "Name": "ondragstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1921590370,
        "Kind": "Components.EventHandler",
        "Name": "ondrop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1004438740,
        "Kind": "Components.EventHandler",
        "Name": "onkeydown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeydown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeydown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1082353870,
        "Kind": "Components.EventHandler",
        "Name": "onkeyup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeyup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeyup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1232496526,
        "Kind": "Components.EventHandler",
        "Name": "onkeypress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeypress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeypress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -376416649,
        "Kind": "Components.EventHandler",
        "Name": "onchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1629570010,
        "Kind": "Components.EventHandler",
        "Name": "oninput",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninput"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 679376251,
        "Kind": "Components.EventHandler",
        "Name": "oninvalid",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninvalid",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninvalid"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2020455114,
        "Kind": "Components.EventHandler",
        "Name": "onreset",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreset",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreset"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -223091253,
        "Kind": "Components.EventHandler",
        "Name": "onselect",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselect"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1638060663,
        "Kind": "Components.EventHandler",
        "Name": "onselectstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1027097714,
        "Kind": "Components.EventHandler",
        "Name": "onselectionchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectionchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectionchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 628223403,
        "Kind": "Components.EventHandler",
        "Name": "onsubmit",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsubmit"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 903885889,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -130023678,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1194234681,
        "Kind": "Components.EventHandler",
        "Name": "onbeforepaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforepaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforepaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1442922254,
        "Kind": "Components.EventHandler",
        "Name": "oncopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 480424193,
        "Kind": "Components.EventHandler",
        "Name": "oncut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1734934500,
        "Kind": "Components.EventHandler",
        "Name": "onpaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 620868209,
        "Kind": "Components.EventHandler",
        "Name": "ontouchcancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchcancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchcancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -760304436,
        "Kind": "Components.EventHandler",
        "Name": "ontouchend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -679129605,
        "Kind": "Components.EventHandler",
        "Name": "ontouchmove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchmove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchmove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1926149077,
        "Kind": "Components.EventHandler",
        "Name": "ontouchstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1127085718,
        "Kind": "Components.EventHandler",
        "Name": "ontouchenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 763031942,
        "Kind": "Components.EventHandler",
        "Name": "ontouchleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2026313892,
        "Kind": "Components.EventHandler",
        "Name": "ongotpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ongotpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ongotpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 765738847,
        "Kind": "Components.EventHandler",
        "Name": "onlostpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onlostpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onlostpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 384363579,
        "Kind": "Components.EventHandler",
        "Name": "onpointercancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointercancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointercancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -94731109,
        "Kind": "Components.EventHandler",
        "Name": "onpointerdown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerdown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerdown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1747724136,
        "Kind": "Components.EventHandler",
        "Name": "onpointerenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1506122907,
        "Kind": "Components.EventHandler",
        "Name": "onpointerleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1683306081,
        "Kind": "Components.EventHandler",
        "Name": "onpointermove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointermove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointermove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -958295423,
        "Kind": "Components.EventHandler",
        "Name": "onpointerout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1526334353,
        "Kind": "Components.EventHandler",
        "Name": "onpointerover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1758363715,
        "Kind": "Components.EventHandler",
        "Name": "onpointerup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 894581245,
        "Kind": "Components.EventHandler",
        "Name": "oncanplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -157423448,
        "Kind": "Components.EventHandler",
        "Name": "oncanplaythrough",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplaythrough",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplaythrough"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1996897530,
        "Kind": "Components.EventHandler",
        "Name": "oncuechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncuechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncuechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -808420391,
        "Kind": "Components.EventHandler",
        "Name": "ondurationchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondurationchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondurationchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1376368759,
        "Kind": "Components.EventHandler",
        "Name": "onemptied",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onemptied",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onemptied"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1811337862,
        "Kind": "Components.EventHandler",
        "Name": "onpause",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpause",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpause"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -253528167,
        "Kind": "Components.EventHandler",
        "Name": "onplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2031922570,
        "Kind": "Components.EventHandler",
        "Name": "onplaying",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplaying",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplaying"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2018726793,
        "Kind": "Components.EventHandler",
        "Name": "onratechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onratechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onratechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 70369209,
        "Kind": "Components.EventHandler",
        "Name": "onseeked",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeked"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1002323276,
        "Kind": "Components.EventHandler",
        "Name": "onseeking",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeking",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeking"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1600463553,
        "Kind": "Components.EventHandler",
        "Name": "onstalled",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstalled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstalled"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1480128852,
        "Kind": "Components.EventHandler",
        "Name": "onstop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 306836835,
        "Kind": "Components.EventHandler",
        "Name": "onsuspend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsuspend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsuspend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1707414461,
        "Kind": "Components.EventHandler",
        "Name": "ontimeupdate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeupdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeupdate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -724606195,
        "Kind": "Components.EventHandler",
        "Name": "onvolumechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onvolumechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onvolumechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 982250881,
        "Kind": "Components.EventHandler",
        "Name": "onwaiting",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwaiting",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwaiting"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1385365802,
        "Kind": "Components.EventHandler",
        "Name": "onloadstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1746881094,
        "Kind": "Components.EventHandler",
        "Name": "ontimeout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 310877459,
        "Kind": "Components.EventHandler",
        "Name": "onabort",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onabort",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onabort"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1118558907,
        "Kind": "Components.EventHandler",
        "Name": "onload",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onload",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onload"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1755472486,
        "Kind": "Components.EventHandler",
        "Name": "onloadend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1236751283,
        "Kind": "Components.EventHandler",
        "Name": "onprogress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onprogress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onprogress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1852415678,
        "Kind": "Components.EventHandler",
        "Name": "onerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>",
            "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ErrorEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1291890632,
        "Kind": "Components.EventHandler",
        "Name": "onactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 354404712,
        "Kind": "Components.EventHandler",
        "Name": "onbeforeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1433936565,
        "Kind": "Components.EventHandler",
        "Name": "onbeforedeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforedeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforedeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1517450220,
        "Kind": "Components.EventHandler",
        "Name": "ondeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 633462008,
        "Kind": "Components.EventHandler",
        "Name": "onended",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onended",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onended"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2032015040,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1203425973,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1731966787,
        "Kind": "Components.EventHandler",
        "Name": "onloadeddata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadeddata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadeddata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1948568782,
        "Kind": "Components.EventHandler",
        "Name": "onloadedmetadata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadedmetadata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadedmetadata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1143381722,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1985851911,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -344527142,
        "Kind": "Components.EventHandler",
        "Name": "onreadystatechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreadystatechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreadystatechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2110345384,
        "Kind": "Components.EventHandler",
        "Name": "onscroll",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onscroll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onscroll"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 866757796,
        "Kind": "Components.EventHandler",
        "Name": "ontoggle",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontoggle",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontoggle"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1116698551,
        "Kind": "Components.Splat",
        "Name": "Attributes",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Merges a collection of attributes into the current element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@attributes",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Splat",
            "Name": "@attributes",
            "TypeName": "System.Object",
            "Documentation": "Merges a collection of attributes into the current element or component.",
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Splat",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes"
        }
      },
      {
        "HashCode": -838507990,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.Razor",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\n            </summary>\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\n            application-relative URLs are resolved.</remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "itemid",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "href",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "applet",
            "Attributes": [
              {
                "Name": "archive",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "area",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "href",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "audio",
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "base",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "href",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "blockquote",
            "Attributes": [
              {
                "Name": "cite",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "formaction",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "del",
            "Attributes": [
              {
                "Name": "cite",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "embed",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "form",
            "Attributes": [
              {
                "Name": "action",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "html",
            "Attributes": [
              {
                "Name": "manifest",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "iframe",
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "img",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "img",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "srcset",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "formaction",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "ins",
            "Attributes": [
              {
                "Name": "cite",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "href",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "menuitem",
            "Attributes": [
              {
                "Name": "icon",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "object",
            "Attributes": [
              {
                "Name": "archive",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "object",
            "Attributes": [
              {
                "Name": "data",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "q",
            "Attributes": [
              {
                "Name": "cite",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "source",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "source",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "srcset",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "track",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "video",
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "video",
            "Attributes": [
              {
                "Name": "poster",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper"
        }
      },
      {
        "HashCode": 1464776527,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-action"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-controller"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-area"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-page"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-page-handler"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-fragment"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-host"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-protocol"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-route"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-all-route-data"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-route-",
                "NameComparison": 1
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the action method.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-controller",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the controller.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Controller"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-area",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the area.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Area"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page-handler",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page handler.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageHandler"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-protocol",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The protocol for the URL, such as \"http\" or \"https\".\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Protocol"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-host",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The host name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Host"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fragment",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL fragment name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fragment"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" /> \n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Route"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-all-route-data",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "IndexerNamePrefix": "asp-route-",
            "IndexerTypeName": "System.String",
            "Documentation": "\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteValues"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper"
        }
      },
      {
        "HashCode": 1702552260,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "cache"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "priority",
            "TypeName": "Microsoft.Extensions.Caching.Memory.CacheItemPriority?",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Priority"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryBy"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-header",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByHeader"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-query",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByQuery"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByRoute"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-cookie",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByCookie"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-user",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByUser"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-culture",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByCulture"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-on",
            "TypeName": "System.DateTimeOffset?",
            "Documentation": "\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresOn"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-after",
            "TypeName": "System.TimeSpan?",
            "Documentation": "\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresAfter"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-sliding",
            "TypeName": "System.TimeSpan?",
            "Documentation": "\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresSliding"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "enabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enabled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper"
        }
      },
      {
        "HashCode": 348932153,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "component",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "params",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "IndexerNamePrefix": "param-",
            "IndexerTypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets values for component parameters.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "type",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the component type. This value is required.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ComponentType"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "render-mode",
            "TypeName": "Microsoft.AspNetCore.Mvc.Rendering.RenderMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderMode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper"
        }
      },
      {
        "HashCode": -1932555745,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "distributed-cache",
            "Attributes": [
              {
                "Name": "name"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a unique name to discriminate cached entries.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryBy"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-header",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByHeader"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-query",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByQuery"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByRoute"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-cookie",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByCookie"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-user",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByUser"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-culture",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByCulture"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-on",
            "TypeName": "System.DateTimeOffset?",
            "Documentation": "\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresOn"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-after",
            "TypeName": "System.TimeSpan?",
            "Documentation": "\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresAfter"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-sliding",
            "TypeName": "System.TimeSpan?",
            "Documentation": "\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresSliding"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "enabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enabled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper"
        }
      },
      {
        "HashCode": -1041064725,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />, \n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "environment"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "names",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Names"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Include"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of environment names in which the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Exclude"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper"
        }
      },
      {
        "HashCode": -664816453,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-action"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-controller"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-area"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-page"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-page-handler"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-fragment"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-route"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-all-route-data"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-route-",
                "NameComparison": 1
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-action"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-controller"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-area"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-page"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-page-handler"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-fragment"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-route"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-all-route-data"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-route-",
                "NameComparison": 1
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-action"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-controller"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-area"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-page"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-page-handler"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-fragment"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-route"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-all-route-data"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-route-",
                "NameComparison": 1
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the action method.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-controller",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the controller.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Controller"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-area",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Area"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page-handler",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page handler.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageHandler"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fragment",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fragment"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Route"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-all-route-data",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "IndexerNamePrefix": "asp-route-",
            "IndexerTypeName": "System.String",
            "Documentation": "\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteValues"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper"
        }
      },
      {
        "HashCode": -786595418,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "form"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the action method.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-controller",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the controller.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Controller"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-area",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Area"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page-handler",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page handler.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageHandler"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-antiforgery",
            "TypeName": "System.Boolean?",
            "Documentation": "\n            <summary>\n            Whether the antiforgery token should be generated.\n            </summary>\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Antiforgery"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fragment",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fragment"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Route"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-all-route-data",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "IndexerNamePrefix": "asp-route-",
            "IndexerTypeName": "System.String",
            "Documentation": "\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteValues"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper"
        }
      },
      {
        "HashCode": -1057668444,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "img",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-append-version"
              },
              {
                "Name": "src"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "src",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Source of the image.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Src"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-append-version",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Value indicating if file version should be appended to the src urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppendVersion"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper"
        }
      },
      {
        "HashCode": -577457202,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-for"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The format string (see https://msdn.microsoft.com/en-us/library/txafckwd.aspx) used to format the\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\n            </summary>\n            <remarks>\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "type",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The type of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputTypeName"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The value of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper"
        }
      },
      {
        "HashCode": -45416827,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "label",
            "Attributes": [
              {
                "Name": "asp-for"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper"
        }
      },
      {
        "HashCode": 1399777739,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'href' attribute.\n            </remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-href-include"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-href-exclude"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-href"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-href-include"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-href-exclude"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-test-class"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-test-property"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-test-value"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-append-version"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Address of the linked resource.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-href-include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HrefInclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-href-exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HrefExclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackHref"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-suppress-fallback-integrity",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SuppressFallbackIntegrity"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-append-version",
            "TypeName": "System.Boolean?",
            "Documentation": "\n            <summary>\n            Value indicating if file version should be appended to the href urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppendVersion"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-href-include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\n            one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackHrefInclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-href-exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackHrefExclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test-class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The class name defined in the stylesheet to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackTestClass"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test-property",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The CSS property name to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackTestProperty"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test-value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The CSS property value to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackTestValue"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper"
        }
      },
      {
        "HashCode": -2125519903,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\n            </summary>\n            <remarks>\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\n            in some cases.\n            </remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "option"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a value for the &lt;option&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper"
        }
      },
      {
        "HashCode": 1732233958,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            Renders a partial view.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "partial",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "name"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name or path of the partial view that is rendered to the response.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "optional",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When optional, executing the tag helper will no-op if the view cannot be located. \n            Otherwise will throw stating the view could not be found.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Optional"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "fallback-name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackName"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "view-data",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary",
            "IndexerNamePrefix": "view-data-",
            "IndexerTypeName": "System.Object",
            "Documentation": "\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ViewData"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper"
        }
      },
      {
        "HashCode": -1468087826,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-src-include"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-src-exclude"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-fallback-src"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-fallback-src-include"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-fallback-src-exclude"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-fallback-test"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-append-version"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "src",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Address of the external script to use.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Src"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-src-include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SrcInclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-src-exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SrcExclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-src",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of a Script tag to fallback to in the case the primary one fails.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackSrc"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-suppress-fallback-integrity",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SuppressFallbackIntegrity"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-append-version",
            "TypeName": "System.Boolean?",
            "Documentation": "\n            <summary>\n            Value indicating if file version should be appended to src urls.\n            </summary>\n            <remarks>\n            A query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppendVersion"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-src-include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\n            primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackSrcInclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-src-exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackSrcExclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The script method defined in the primary script to use for the fallback test.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackTestExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper"
        }
      },
      {
        "HashCode": -709477489,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\n            <c>asp-items</c> attribute(s).\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "asp-for"
              }
            ]
          },
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "asp-items"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-items",
            "TypeName": "System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>",
            "Documentation": "\n            <summary>\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\n            &lt;optgroup&gt; and &lt;option&gt; elements.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper"
        }
      },
      {
        "HashCode": -2044757456,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "asp-for"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper"
        }
      },
      {
        "HashCode": -2059308532,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\n            attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "span",
            "Attributes": [
              {
                "Name": "asp-validation-for"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-validation-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            Gets an expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper"
        }
      },
      {
        "HashCode": 2108372772,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\n            attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "div",
            "Attributes": [
              {
                "Name": "asp-validation-summary"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-validation-summary",
            "TypeName": "Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\n            <c>(ValidationSummary)23</c>.\n            </exception>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValidationSummary"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper"
        }
      },
      {
        "HashCode": 1342982883,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@bind-",
                "NameComparison": 1,
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-...",
            "TypeName": "System.Collections.Generic.Dictionary<string, object>",
            "IndexerNamePrefix": "@bind-",
            "IndexerTypeName": "System.Object",
            "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.Fallback": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Bind"
        }
      },
      {
        "HashCode": 1481998772,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 444899064,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 506983085,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "checkbox",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_checked"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_checked"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-checked",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "checked",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "checkbox",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -219719262,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "text",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "text",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1994487301,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -226349803,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -349833075,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1602553187,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 238661904,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1679369416,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1912367096,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -81843560,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1902823656,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1205705653,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 278562130,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 2030290980,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1623657133,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatExpansionPanel",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatExpansionPanel"
        }
      },
      {
        "HashCode": -1744382246,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatExpansionPanel",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatExpansionPanel",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatExpansionPanel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2129282437,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>"
        }
      },
      {
        "HashCode": 1027541413,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.BaseMatAutocompleteList<TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1442583587,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>"
        }
      },
      {
        "HashCode": -386726166,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatAutocomplete<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1473767642,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>"
        }
      },
      {
        "HashCode": 398609061,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatCheckboxInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1901233868,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>"
        }
      },
      {
        "HashCode": 996597111,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckbox<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckbox<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 484351435,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChip",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChip",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChip"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChip",
          "Components.Bind.ChangeAttribute": "SelectedChipChanged",
          "Common.TypeName": "MatBlazor.MatChipSet"
        }
      },
      {
        "HashCode": -450178896,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChips",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChips",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChips"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChips",
          "Components.Bind.ChangeAttribute": "SelectedChipsChanged",
          "Common.TypeName": "MatBlazor.MatChipSet"
        }
      },
      {
        "HashCode": 9801909,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChip",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChip",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip>",
            "Documentation": "Binds the provided expression to the 'SelectedChip' property and a change event delegate to the 'SelectedChipChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChip"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChip",
          "Components.Bind.ChangeAttribute": "SelectedChipChanged",
          "Common.TypeName": "MatBlazor.MatChipSet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1684748195,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChipSet",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChipSet",
            "Attributes": [
              {
                "Name": "@bind-SelectedChips",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChips",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatChip[]>",
            "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChips"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChips",
          "Components.Bind.ChangeAttribute": "SelectedChipsChanged",
          "Common.TypeName": "MatBlazor.MatChipSet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -223100098,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatChip",
            "Attributes": [
              {
                "Name": "@bind-IsSelected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsSelected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsSelected",
          "Components.Bind.ChangeAttribute": "IsSelectedChanged",
          "Common.TypeName": "MatBlazor.MatChip"
        }
      },
      {
        "HashCode": -263542222,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatChip",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatChip",
            "Attributes": [
              {
                "Name": "@bind-IsSelected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsSelected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsSelected' property and a change event delegate to the 'IsSelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsSelected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsSelected",
          "Components.Bind.ChangeAttribute": "IsSelectedChanged",
          "Common.TypeName": "MatBlazor.MatChip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1452008613,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>"
        }
      },
      {
        "HashCode": 144322331,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePicker<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePicker<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -770932469,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatDialog"
        }
      },
      {
        "HashCode": 643642552,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -557521800,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.BaseMatDrawer"
        }
      },
      {
        "HashCode": 1444892285,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.BaseMatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1720770134,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.BaseMatIconButton"
        }
      },
      {
        "HashCode": -1828486737,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.BaseMatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1423831831,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavItem"
        }
      },
      {
        "HashCode": 1900276473,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1250312609,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu"
        }
      },
      {
        "HashCode": -2072058647,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu"
        }
      },
      {
        "HashCode": 1524523959,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1497599605,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.BaseMatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1821176549,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>"
        }
      },
      {
        "HashCode": -1685620051,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatNumericUpDownFieldInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1693691948,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>"
        }
      },
      {
        "HashCode": 433658602,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownField<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 95005278,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>"
        }
      },
      {
        "HashCode": -1829436817,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatRadioGroupInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1129373330,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>"
        }
      },
      {
        "HashCode": -1950466024,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroup<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroup<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -46376029,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseCoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>"
        }
      },
      {
        "HashCode": -903655827,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseCoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseCoreMatSelect<TValue, TKey>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 377171882,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>"
        }
      },
      {
        "HashCode": -956580685,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1588854004,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>"
        }
      },
      {
        "HashCode": -816349378,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectItem<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1604049393,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>"
        }
      },
      {
        "HashCode": -1172374507,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSelectValue<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 670137829,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>"
        }
      },
      {
        "HashCode": -1629696335,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlider<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1786716893,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>"
        }
      },
      {
        "HashCode": -1610667777,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.BaseMatSlideToggle<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1000138508,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar"
        }
      },
      {
        "HashCode": 817197292,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.BaseMatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1385939074,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow"
        }
      },
      {
        "HashCode": -1818916571,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow"
        }
      },
      {
        "HashCode": -1537158254,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1786441419,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.BaseMatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1227868473,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar"
        }
      },
      {
        "HashCode": 744157090,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar"
        }
      },
      {
        "HashCode": 1274662442,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 488348588,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 106287317,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseTableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseTableRow"
        }
      },
      {
        "HashCode": 36023210,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseTableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseTableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.BaseTableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 470381686,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BaseMatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup"
        }
      },
      {
        "HashCode": -449584778,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.BaseMatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.BaseMatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.BaseMatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -953792568,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatStringField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatStringField"
        }
      },
      {
        "HashCode": -1208875457,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatStringField",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatStringField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatStringField",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 392571383,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTextField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>"
        }
      },
      {
        "HashCode": 1154720682,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTextField<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTextField",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatTextField<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -495188027,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTreeView",
            "Attributes": [
              {
                "Name": "@bind-SelectedNode",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedNode",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedNode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedNode",
          "Components.Bind.ChangeAttribute": "SelectedNodeChanged",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>"
        }
      },
      {
        "HashCode": -1326138516,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTreeView<TNode>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTreeView",
            "Attributes": [
              {
                "Name": "@bind-SelectedNode",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedNode",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TNode>",
            "Documentation": "Binds the provided expression to the 'SelectedNode' property and a change event delegate to the 'SelectedNodeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedNode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedNode",
          "Components.Bind.ChangeAttribute": "SelectedNodeChanged",
          "Common.TypeName": "MatBlazor.MatTreeView<TNode>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -122653113,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>"
        }
      },
      {
        "HashCode": 458731298,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocompleteList<TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocompleteList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "MatBlazor.MatAutocompleteList<TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1484370227,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>"
        }
      },
      {
        "HashCode": 351677872,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatAutocomplete<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatAutocomplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatAutocomplete<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1378620399,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>"
        }
      },
      {
        "HashCode": -1653737415,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatCheckboxInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatCheckboxInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatCheckboxInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1004607841,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDatePickerInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>"
        }
      },
      {
        "HashCode": 1575855946,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDatePickerInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDatePickerInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatDatePickerInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2055013279,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatDialog"
        }
      },
      {
        "HashCode": 736271074,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDialog",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDialog",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 389946629,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.MatDrawer"
        }
      },
      {
        "HashCode": 1017448131,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatDrawer",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatDrawer",
            "Attributes": [
              {
                "Name": "@bind-Opened",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Opened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Opened' property and a change event delegate to the 'OpenedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Opened"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Opened",
          "Components.Bind.ChangeAttribute": "OpenedChanged",
          "Common.TypeName": "MatBlazor.MatDrawer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1214307920,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.MatIconButton"
        }
      },
      {
        "HashCode": 1478567370,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatIconButton",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatIconButton",
            "Attributes": [
              {
                "Name": "@bind-Toggled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Toggled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Toggled' property and a change event delegate to the 'ToggledChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Toggled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Toggled",
          "Components.Bind.ChangeAttribute": "ToggledChanged",
          "Common.TypeName": "MatBlazor.MatIconButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1202941024,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavItem"
        }
      },
      {
        "HashCode": -114386099,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavItem",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavItem",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 934114284,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu"
        }
      },
      {
        "HashCode": 1365207887,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu"
        }
      },
      {
        "HashCode": -1945082909,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 213015588,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNavSubMenu",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNavSubMenu",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "MatBlazor.MatNavSubMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1759255677,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>"
        }
      },
      {
        "HashCode": 2092801419,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatNumericUpDownFieldInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatNumericUpDownFieldInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2051462149,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>"
        }
      },
      {
        "HashCode": 668578218,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatRadioGroupInternal<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatRadioGroupInternal",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatRadioGroupInternal<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1754772930,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>"
        }
      },
      {
        "HashCode": 261117694,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelect<TValue, TKey>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelect<TValue, TKey>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1274821488,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CoreMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>"
        }
      },
      {
        "HashCode": -2029639217,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.CoreMatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.CoreMatSelectValue<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 648059414,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>"
        }
      },
      {
        "HashCode": 1290222923,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelect<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1954307258,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>"
        }
      },
      {
        "HashCode": 403407797,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectItem<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectItem",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectItem<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 710396004,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>"
        }
      },
      {
        "HashCode": -310506784,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSelectValue<TValue, TItem>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSelectValue",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSelectValue<TValue, TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1023678057,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>"
        }
      },
      {
        "HashCode": 1735834946,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlider<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlider<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1171322297,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>"
        }
      },
      {
        "HashCode": -1451730867,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSlideToggle<TValue>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSlideToggle",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatSlideToggle<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1899659749,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatSnackbar"
        }
      },
      {
        "HashCode": 87734633,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSnackbar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSnackbar",
            "Attributes": [
              {
                "Name": "@bind-IsOpen",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-IsOpen",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'IsOpen' property and a change event delegate to the 'IsOpenChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "IsOpen"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "IsOpen",
          "Components.Bind.ChangeAttribute": "IsOpenChanged",
          "Common.TypeName": "MatBlazor.MatSnackbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1240610239,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow"
        }
      },
      {
        "HashCode": 657205013,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow"
        }
      },
      {
        "HashCode": -481487175,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-SortId",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SortId",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'SortId' property and a change event delegate to the 'SortIdChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SortId"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SortId",
          "Components.Bind.ChangeAttribute": "SortIdChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 161693759,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatSortHeaderRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatSortHeaderRow",
            "Attributes": [
              {
                "Name": "@bind-Direction",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Direction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.MatSortDirection>",
            "IsEnum": true,
            "Documentation": "Binds the provided expression to the 'Direction' property and a change event delegate to the 'DirectionChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Direction"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Direction",
          "Components.Bind.ChangeAttribute": "DirectionChanged",
          "Common.TypeName": "MatBlazor.MatSortHeaderRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 466574923,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.MatTabBar"
        }
      },
      {
        "HashCode": 950506065,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabBar"
        }
      },
      {
        "HashCode": -2064274857,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-Active",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Active",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<MatBlazor.BaseMatTabLabel>",
            "Documentation": "Binds the provided expression to the 'Active' property and a change event delegate to the 'ActiveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Active"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Active",
          "Components.Bind.ChangeAttribute": "ActiveChanged",
          "Common.TypeName": "MatBlazor.MatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1273204763,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabBar",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabBar",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1668035830,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.TableRow"
        }
      },
      {
        "HashCode": -2057750607,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.TableRow",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.TableRow",
            "Attributes": [
              {
                "Name": "@bind-Selected",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Selected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Selected' property and a change event delegate to the 'SelectedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Selected"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Selected",
          "Components.Bind.ChangeAttribute": "SelectedChanged",
          "Common.TypeName": "MatBlazor.TableRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 267740215,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabGroup"
        }
      },
      {
        "HashCode": 325990735,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatTabGroup",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatTabGroup",
            "Attributes": [
              {
                "Name": "@bind-ActiveIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ActiveIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'ActiveIndex' property and a change event delegate to the 'ActiveIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ActiveIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "ActiveIndex",
          "Components.Bind.ChangeAttribute": "ActiveIndexChanged",
          "Common.TypeName": "MatBlazor.MatTabGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -583408466,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatInputTextComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>"
        }
      },
      {
        "HashCode": -1717342054,
        "Kind": "Components.Bind",
        "Name": "MatBlazor.MatInputTextComponent<T>",
        "AssemblyName": "MatBlazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MatBlazor.MatInputTextComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "MatBlazor.MatInputTextComponent<T>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 593305807,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": -1041878231,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1137993135,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"
        }
      },
      {
        "HashCode": -693628417,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -463022414,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"
        }
      },
      {
        "HashCode": -720035566,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1499876891,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"
        }
      },
      {
        "HashCode": 1671540668,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 370967916,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"
        }
      },
      {
        "HashCode": 985944796,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -196190459,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": -1252323604,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1528786479,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": -1591753541,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1591914509,
        "Kind": "Components.Ref",
        "Name": "Ref",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Populates the specified field or property with a reference to the element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ref",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Ref",
            "Name": "@ref",
            "TypeName": "System.Object",
            "Documentation": "Populates the specified field or property with a reference to the element or component.",
            "Metadata": {
              "Common.PropertyName": "Ref",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Ref",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Ref"
        }
      },
      {
        "HashCode": 1296320563,
        "Kind": "Components.Key",
        "Name": "Key",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@key",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Key",
            "Name": "@key",
            "TypeName": "System.Object",
            "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
            "Metadata": {
              "Common.PropertyName": "Key",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Key",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Key"
        }
      }
    ],
    "CSharpLanguageVersion": 900
  },
  "RootNamespace": "Pinion",
  "Documents": [
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/App.razor",
      "TargetPath": "App.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/_Imports.razor",
      "TargetPath": "_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Pages/Home/HomeContent.razor",
      "TargetPath": "Pages\\Home\\HomeContent.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Shared/NavMenu.razor",
      "TargetPath": "Shared\\NavMenu.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Pages/Examples/FetchData.razor",
      "TargetPath": "Pages\\Examples\\FetchData.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Pages/_Host.cshtml",
      "TargetPath": "Pages\\_Host.cshtml",
      "FileKind": "mvc"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Shared/PinionBox.razor",
      "TargetPath": "Shared\\PinionBox.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Areas/Identity/Pages/Account/LogOut.cshtml",
      "TargetPath": "Areas\\Identity\\Pages\\Account\\LogOut.cshtml",
      "FileKind": "mvc"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Shared/LoginDisplay.razor",
      "TargetPath": "Shared\\LoginDisplay.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Shared/PageHeader.razor",
      "TargetPath": "Shared\\PageHeader.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Pages/Examples/Index.razor",
      "TargetPath": "Pages\\Examples\\Index.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Pages/Error.cshtml",
      "TargetPath": "Pages\\Error.cshtml",
      "FileKind": "mvc"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Areas/Identity/Pages/Shared/_LoginPartial.cshtml",
      "TargetPath": "Areas\\Identity\\Pages\\Shared\\_LoginPartial.cshtml",
      "FileKind": "mvc"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Shared/MainLayout.razor",
      "TargetPath": "Shared\\MainLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Pages/Examples/Counter.razor",
      "TargetPath": "Pages\\Examples\\Counter.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/Users/School/Documents/Non-School-Repos/Pinion/Pinion/Pages/Examples/SurveyPrompt.razor",
      "TargetPath": "Pages\\Examples\\SurveyPrompt.razor",
      "FileKind": "component"
    }
  ],
  "SerializationFormat": "0.2"
}